@using RetroAchievementTracker.Data.NavbarData
@using RetroAchievementTracker.Data.Login
@using RetroAchievementTracker.Data.Enums
@using RetroAchievementTracker.Data.RetroAchievementsAPI.Models
@using RetroAchievementTracker.Shared.Dialogs
@using RetroAchievementsAPI

@inject NavBarService NavBarService;
@inject LoginService LoginService;
@inject RetroAchievements RetroAchievements
@inject IDialogService DialogService;
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject ISnackbar Snackbar;

<MudDrawer @bind-Open="@open" Elevation="1" Width="290px" PreserveOpenState=false Style="overflow-x: hidden">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6" Class="text-white" Style="color: white;">RetroAchievements Tracker</MudText>
    </MudDrawerHeader>
    <MudDivider Class="my-2" />
    <MudNavMenu Bordered="true" Style=" z-index: 1">
        
        @if(loggedIn)
        {
        <MudGrid Spacing=1 Class="ml-4">
            <MudItem xs=4>
                <MudImage Src="@userSummary.UserPic" Height=100 Width=100 />
            </MudItem>
            <MudItem xs=8 Class="mt-3">
                <MudText Align="Align.Left" Class="ml-4" Style="color: white; font-weight:bold">@loggedInUser</MudText>
                <MudText Align="Align.Left" Class="ml-4" Style="color: white; font-weight:bold">Points: @userSummary.TotalPoints.ToString("N0")</MudText>
                <MudText Align="Align.Left" Class="ml-4" Style="color: white; font-weight:bold">Rank: @userSummary.Rank.ToString("N0")/@userSummary.TotalRanked.ToString("N0")</MudText>
                <MudText Align="Align.Left" Class="ml-4" Style="color: white; font-weight:bold">100% Count: @userSummary.GamesCompleted.ToString("N0")</MudText>
            </MudItem>
        </MudGrid>
        <MudNavLink Href="/trackedgames" Style="color: #E3F2FD;" Icon="@Icons.Filled.PushPin" IconColor="Color.Warning">Tracked Games</MudNavLink>
        <MudNavLink Href="/inprogressgames" Style="color: #E3F2FD;" Icon="@Icons.Filled.Percent" IconColor="Color.Warning">In Progress Games</MudNavLink>
        }
        <MudNavLink Href="/home" Style="color: #E3F2FD;" Icon="@Icons.Filled.Home" IconColor="Color.Warning">Home</MudNavLink>
        <MudNavGroup Title="Nintendo" Style="color: #E3F2FD;" Icon="@Icons.Filled.Games" IconColor="Color.Warning">
            <MudNavLink Href="/gameboy" Style="color: #E3F2FD;">Game Boy<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.GameBoy]/@gameCounts[(int)Consoles.ConsoleNames.GameBoy]</MudText></MudNavLink>
            <MudNavLink Href="/gameboycolour" Style="color: #E3F2FD;">Game Boy Colour<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.GameBoyColour]/@gameCounts[(int)Consoles.ConsoleNames.GameBoyColour]</MudText></MudNavLink>
            <MudNavLink Href="/gameboyadvance" Style="color: #E3F2FD;">Game Boy Advance<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.GameBoyAdvance]/@gameCounts[(int)Consoles.ConsoleNames.GameBoyAdvance]</MudText></MudNavLink>
            <MudNavLink Href="/nes" Style="color: #E3F2FD;">NES<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.NES]/@gameCounts[(int)Consoles.ConsoleNames.NES]</MudText></MudNavLink>
            <MudNavLink Href="/snes" Style="color: #E3F2FD;">SNES<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.SNES]/@gameCounts[(int)Consoles.ConsoleNames.SNES]</MudText></MudNavLink>
            <MudNavLink Href="/n64" Style="color: #E3F2FD;">Nintendo 64<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Nintendo64]/@gameCounts[(int)Consoles.ConsoleNames.Nintendo64]</MudText></MudNavLink>
            <MudNavLink Href="/ds" Style="color: #E3F2FD;">Nintendo DS<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.NintendoDS]/@gameCounts[(int)Consoles.ConsoleNames.NintendoDS]</MudText></MudNavLink>
            <MudNavLink Href="/pokemonmini" Style="color: #E3F2FD;">Pokemon Mini<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.PokemonMini]/@gameCounts[(int)Consoles.ConsoleNames.PokemonMini]</MudText></MudNavLink>
            <MudNavLink Href="/virtualboy" Style="color: #E3F2FD;">Virtual Boy<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.VirtualBoy]/@gameCounts[(int)Consoles.ConsoleNames.VirtualBoy]</MudText></MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="Playstation" Style="color: #E3F2FD;" Icon="@Icons.Filled.Games" IconColor="Color.Warning">
            <MudNavLink Href="/ps1" Style="color: #E3F2FD;">PlayStation 1<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.PlayStation]/@gameCounts[(int)Consoles.ConsoleNames.PlayStation]</MudText></MudNavLink>
            <MudNavLink Href="/psp" Style="color: #E3F2FD;">PSP<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.PlayStationPortable]/@gameCounts[(int)Consoles.ConsoleNames.PlayStationPortable]</MudText></MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="Atari"  Style="color: #E3F2FD;" Icon="@Icons.Filled.Games" IconColor="Color.Warning">
            <MudNavLink Href="/atari2600" Style="color: #E3F2FD;">Atari 2600<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Atari2600]/@gameCounts[(int)Consoles.ConsoleNames.Atari2600]</MudText></MudNavLink>
            <MudNavLink Href="/atari7800" Style="color: #E3F2FD;">Atari 7800<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Atari7800]/@gameCounts[(int)Consoles.ConsoleNames.Atari7800]</MudText></MudNavLink>
            <MudNavLink Href="/atarijaguar" Style="color: #E3F2FD;">Atari Jaguar<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.AtariJaguar]/@gameCounts[(int)Consoles.ConsoleNames.AtariJaguar]</MudText></MudNavLink>
            <MudNavLink Href="/atarilynx" Style="color: #E3F2FD;">Atari Lynx<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.AtariLynx]/@gameCounts[(int)Consoles.ConsoleNames.AtariLynx]</MudText></MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="NEC" Style="color: #E3F2FD;" Icon="@Icons.Filled.Games"  IconColor="Color.Warning">
            <MudNavLink Href="/pcengine" Style="color: #E3F2FD;">PC Engine<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.PCEngine]/@gameCounts[(int)Consoles.ConsoleNames.PCEngine]</MudText></MudNavLink>
            <MudNavLink Href="/pc8000" Style="color: #E3F2FD;">PC-8000<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.PC80008800]/@gameCounts[(int)Consoles.ConsoleNames.PC80008800]</MudText></MudNavLink>
            <MudNavLink Href="/pcfx" Style="color: #E3F2FD;">PC-FX<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.PCFX]/@gameCounts[(int)Consoles.ConsoleNames.PCFX]</MudText></MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="Sega" Style="color: #E3F2FD;" Icon="@Icons.Filled.Games" IconColor="Color.Warning">
            <MudNavLink Href="/sg1000" Style="color: #E3F2FD;">SG-1000<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.SG100]/@gameCounts[(int)Consoles.ConsoleNames.SG100]</MudText></MudNavLink>
            <MudNavLink Href="/mastersystem" Style="color: #E3F2FD;">Master System<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.MasterSystem]/@gameCounts[(int)Consoles.ConsoleNames.MasterSystem]</MudText></MudNavLink>
            <MudNavLink Href="/gamegear" Style="color: #E3F2FD;">Game Gear<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.GameGear]/@gameCounts[(int)Consoles.ConsoleNames.GameGear]</MudText></MudNavLink>
            <MudNavLink Href="/megadrive" Style="color: #E3F2FD;">Mega Drive<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.MegaDrive]/@gameCounts[(int)Consoles.ConsoleNames.MegaDrive]</MudText></MudNavLink>
            <MudNavLink Href="/segacd" Style="color: #E3F2FD;">Sega CD<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.SegaCD]/@gameCounts[(int)Consoles.ConsoleNames.SegaCD]</MudText></MudNavLink>
            <MudNavLink Href="/sega32x" Style="color: #E3F2FD;">Sega 32X<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.ThirtyTwoX]/@gameCounts[(int)Consoles.ConsoleNames.ThirtyTwoX]</MudText></MudNavLink>
            <MudNavLink Href="/saturn" Style="color: #E3F2FD;">Saturn<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Saturn]/@gameCounts[(int)Consoles.ConsoleNames.Saturn]</MudText></MudNavLink>
            <MudNavLink Href="/dreamcast" Style="color: #E3F2FD;">Dreamcast<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Dreamcast]/@gameCounts[(int)Consoles.ConsoleNames.Dreamcast]</MudText></MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="Other" Style="color: #E3F2FD;" Icon="@Icons.Filled.Games" IconColor="Color.Warning">
            <MudNavLink Href="/3do" Style="color: #E3F2FD;">3DO<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.ThreeDOInteractiveMultiplayer]/@gameCounts[(int)Consoles.ConsoleNames.ThreeDOInteractiveMultiplayer]</MudText></MudNavLink>
            <MudNavLink Href="/amstradcpc" Style="color: #E3F2FD;">Amstrad CPC<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.AmstradCPC]/@gameCounts[(int)Consoles.ConsoleNames.AmstradCPC]</MudText></MudNavLink>
            <MudNavLink Href="/appleii" Style="color: #E3F2FD;">Apple II<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.AppleII]/@gameCounts[(int)Consoles.ConsoleNames.AppleII]</MudText></MudNavLink>
            <MudNavLink Href="/arcade" Style="color: #E3F2FD;">Arcade<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Arcade]/@gameCounts[(int)Consoles.ConsoleNames.Arcade]</MudText></MudNavLink>
            <MudNavLink Href="/arduboy" Style="color: #E3F2FD;">Arduboy<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Arduboy]/@gameCounts[(int)Consoles.ConsoleNames.Arduboy]</MudText></MudNavLink>
            <MudNavLink Href="/coecovision" Style="color: #E3F2FD;">CoecoVision<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.ColecoVision]/@gameCounts[(int)Consoles.ConsoleNames.ColecoVision]</MudText></MudNavLink>
            <MudNavLink Href="/channelf" Style="color: #E3F2FD;">Fairchild Channel F<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.FairchildChannelF]/@gameCounts[(int)Consoles.ConsoleNames.FairchildChannelF]</MudText></MudNavLink>
            <MudNavLink Href="/intellivision" Style="color: #E3F2FD;">Intellivision<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Intellivision]/@gameCounts[(int)Consoles.ConsoleNames.Intellivision]</MudText></MudNavLink>
            <MudNavLink Href="/odyssesy2" Style="color: #E3F2FD;">Odyssesy 2<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.MagnavoxOdyssey2]/@gameCounts[(int)Consoles.ConsoleNames.MagnavoxOdyssey2]</MudText></MudNavLink>
            <MudNavLink Href="/megaduck" Style="color: #E3F2FD;">Mega Duck<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.MegaDuck]/@gameCounts[(int)Consoles.ConsoleNames.MegaDuck]</MudText></MudNavLink>
            <MudNavLink Href="/msx" Style="color: #E3F2FD;">MSX<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.MSX]/@gameCounts[(int)Consoles.ConsoleNames.MSX]</MudText></MudNavLink>
            <MudNavLink Href="/neogeopocket" Style="color: #E3F2FD;">Neo Geo Pocket<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.NeoGeoPocket]/@gameCounts[(int)Consoles.ConsoleNames.NeoGeoPocket]</MudText></MudNavLink>
            <MudNavLink Href="/vectrex" Style="color: #E3F2FD;">Vectrex<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.Vectrex]/@gameCounts[(int)Consoles.ConsoleNames.Vectrex]</MudText></MudNavLink>
            <MudNavLink Href="/wasm4" Style="color: #E3F2FD;">WASM-4<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.WASM4]/@gameCounts[(int)Consoles.ConsoleNames.WASM4]</MudText></MudNavLink>
            <MudNavLink Href="/watarasupervision" Style="color: #E3F2FD;">Watara Supervision<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.WataraSupervision]/@gameCounts[(int)Consoles.ConsoleNames.WataraSupervision]</MudText></MudNavLink>
            <MudNavLink Href="/wonderswan" Style="color: #E3F2FD;">WonderSwan<MudSpacer /><MudText Color=Color.Error Style="display: inline;">@gameCompletedCounts[(int)Consoles.ConsoleNames.WonderSwan]/@gameCounts[(int)Consoles.ConsoleNames.WonderSwan]</MudText></MudNavLink>
        </MudNavGroup>
    </MudNavMenu>
</MudDrawer>



<MudAppBar Fixed=true>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
    <MudSpacer ></MudSpacer>

    <MudText>Support: Guinea#1337 / </MudText>
    <MudIconButton Variant="Variant.Filled" Icon="@Icons.Custom.Brands.GitHub" Style="color: white;" Link="https://github.com/Bregann/RetroAchievements-AchievementTracker" Target="_blank"></MudIconButton>
    @if(!loggedIn)
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenRegistrationModal" Class="mr-2">Register</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenLoginModal">Login</MudButton>
    }
    else
    {
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="LogoutOfSite">Logout</MudButton>
    }
</MudAppBar>


@code {
    bool open = true;
    private Dictionary<int, int> gameCounts;
    private Dictionary<int, int> gameCompletedCounts;
    public bool loggedIn = false;
    public GetUserSummary userSummary = null;
    public string loggedInUser;
    void ToggleDrawer()
    {
        open = !open;
    }

    protected override Task OnInitializedAsync()
    {
        gameCounts = NavBarService.GetTotalGameCounts();
        gameCompletedCounts = NavBarService.GetCompletedGamesForUser("");
        return Task.CompletedTask;
    }

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        { //check if login details are in the local storage
            if(await LocalStorage.ContainKeyAsync("loginToken"))
            {
                loggedIn = LoginService.ValidateUserLogin(await LocalStorage.GetItemAsync<string>("loginToken"));
            }
            else
            {
                loggedIn = false;
            }

            if(loggedIn) //If they match and they're logged in then update the data
            {
                loggedInUser = LoginService.GetLoggedInUser(await LocalStorage.GetItemAsync<string>("loginToken"));
                await RetroAchievements.GetUserGamesProgress(loggedInUser);
                Snackbar.Add("Games Updated!", Severity.Info);
                gameCompletedCounts = NavBarService.GetCompletedGamesForUser(loggedInUser);
                userSummary = await RetroAchievements.GetUserProfileData(loggedInUser);
                userSummary.UserPic = "https://retroachievements.org" + userSummary.UserPic;
                StateHasChanged();
            }
        }
    }

    private async Task OpenLoginModal()
    {
        var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.Small, FullWidth = true, DisableBackdropClick = true };

        var dialog = DialogService.Show<LoginDialog>("Login", options);
        var response = await dialog.Result;

        //If they've logged in successfully update the games
        if((bool)response.Data == true)
        {
            loggedIn = true;
            loggedInUser = LoginService.GetLoggedInUser(await LocalStorage.GetItemAsync<string>("loginToken"));
            await RetroAchievements.GetUserGamesProgress(loggedInUser);
            Snackbar.Add("Games Updated!", Severity.Info);
            gameCompletedCounts = NavBarService.GetCompletedGamesForUser(loggedInUser);
            userSummary = await RetroAchievements.GetUserProfileData(loggedInUser);
            userSummary.UserPic = "https://retroachievements.org" + userSummary.UserPic;
            StateHasChanged();
        }
    }

    private async Task OpenRegistrationModal()
    {
        var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.Small, FullWidth = true, DisableBackdropClick = true };

        var dialog = DialogService.Show<RegisterAccountDialog>("Registration", options);
        var response = await dialog.Result;

        //If they've logged in successfully update the games
        if((bool)response.Data == true)
        {
            loggedIn = true;
            loggedInUser = LoginService.GetLoggedInUser(await LocalStorage.GetItemAsync<string>("loginToken"));
            await RetroAchievements.GetUserGamesProgress(loggedInUser);
            Snackbar.Add("Games Updated!", Severity.Info);
            gameCompletedCounts = NavBarService.GetCompletedGamesForUser(loggedInUser);
            userSummary = await RetroAchievements.GetUserProfileData(loggedInUser);
            userSummary.UserPic = "https://retroachievements.org" + userSummary.UserPic;
            StateHasChanged();
        }
    }

    private async Task LogoutOfSite()
    {
        await LocalStorage.ClearAsync();
        Snackbar.Add("Logged out of website", Severity.Success);
        loggedIn = false;
        gameCompletedCounts = NavBarService.GetCompletedGamesForUser("");
        StateHasChanged();
    }
}
